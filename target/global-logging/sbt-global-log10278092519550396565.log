[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea20217.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea20217.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Azul Systems, Inc. Java 11.0.23)
[debug]       Load.loadUnit: plugins took 188.7524ms
[debug]       Load.loadUnit: defsScala took 2.1898ms
[debug] [Loading] Scanning directory C:\Users\Dell\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 13.0358ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2603 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 50.9963ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dell\.sbt\1.0\plugins, plugins: List(<none>))) took 90.313499ms
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 260.6396ms
[debug]       Load.loadUnit: cleanEvalClasses took 9.8234ms
[debug]     Load.loadUnit(file:/C:/Users/Dell/.sbt/1.0/plugins/, ...) took 479.685801ms
[debug]   Load.apply: load took 723.3965ms
[debug]   Load.apply: resolveProjects took 6.751301ms
[debug]   Load.apply: finalTransforms took 89.050899ms
[debug]   Load.apply: config.delegates took 14.3223ms
[debug]   Load.apply: Def.make(settings)... took 605.2837ms
[debug]   Load.apply: structureIndex took 130.9714ms
[debug]   Load.apply: mkStreams took 1.877ms
[info] loading global plugins from C:\Users\Dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3490.6475ms
[debug]           Load.loadUnit: plugins took 23.2727ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug]             Load.loadUnit: mkEval took 0.449101ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4835 ms
[info] loading settings for project texteditor_react_scala-build from plugins.sbt,idea20217.sbt ...
[debug]               Load.resolveProject(texteditor_react_scala-build) took 1.4301ms
[debug]             Load.loadTransitive: finalizeProject(Project(id texteditor_react_scala-build, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, plugins: List(<none>))) took 3.2672ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: (texteditor_react_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 78.6127ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.985701ms
[debug]         Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/project/, ...) took 103.5855ms
[debug]       Load.apply: load took 104.6324ms
[debug]       Load.apply: resolveProjects took 0.127501ms
[debug]       Load.apply: finalTransforms took 10.0798ms
[debug]       Load.apply: config.delegates took 0.5032ms
[debug]       Load.apply: Def.make(settings)... took 92.8732ms
[debug]       Load.apply: structureIndex took 28.429001ms
[debug]       Load.apply: mkStreams took 0.002799ms
[info] loading project definition from C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 643.106599ms
[debug]     Load.loadUnit: defsScala took 0.006099ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala
[debug]       Load.loadUnit: mkEval took 0.3954ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5092 ms
[info] loading settings for project texteditor_react_scala from build.sbt ...
[debug]         Load.resolveProject(texteditor_react_scala) took 53.4232ms
[debug]       Load.loadTransitive: finalizeProject(Project(id texteditor_react_scala, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, plugins: List(<none>))) took 59.5704ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, returning: (texteditor_react_scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 163.961099ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.532499ms
[debug]   Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/, ...) took 812.296001ms
[debug] Load.apply: load took 814.068101ms
[debug] Load.apply: resolveProjects took 0.1797ms
[debug] Load.apply: finalTransforms took 34.4839ms
[debug] Load.apply: config.delegates took 0.4212ms
[debug] Load.apply: Def.make(settings)... took 107.896899ms
[debug] Load.apply: structureIndex took 29.977201ms
[debug] Load.apply: mkStreams took 0.0101ms
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49911 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49911, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(idea-shell, None, None)
