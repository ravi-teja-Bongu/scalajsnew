[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea22350.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea22350.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Azul Systems, Inc. Java 11.0.23)
[debug]       Load.loadUnit: plugins took 124.1107ms
[debug]       Load.loadUnit: defsScala took 0.479599ms
[debug] [Loading] Scanning directory C:\Users\Dell\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 9.085301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.249199 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 50.298ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dell\.sbt\1.0\plugins, plugins: List(<none>))) took 107.6156ms
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 252.0843ms
[debug]       Load.loadUnit: cleanEvalClasses took 7.0788ms
[debug]     Load.loadUnit(file:/C:/Users/Dell/.sbt/1.0/plugins/, ...) took 397.804599ms
[debug]   Load.apply: load took 595.548ms
[debug]   Load.apply: resolveProjects took 5.3669ms
[debug]   Load.apply: finalTransforms took 55.397899ms
[debug]   Load.apply: config.delegates took 7.958199ms
[debug]   Load.apply: Def.make(settings)... took 459.7911ms
[debug]   Load.apply: structureIndex took 97.4664ms
[debug]   Load.apply: mkStreams took 1.938599ms
[info] loading global plugins from C:\Users\Dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2684.8403ms
[debug]           Load.loadUnit: plugins took 26.1103ms
[debug]           Load.loadUnit: defsScala took 0.010301ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug]             Load.loadUnit: mkEval took 0.4982ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.42 ms
[info] loading settings for project texteditor_react_scala-build from plugins.sbt,idea22350.sbt ...
[debug]               Load.resolveProject(texteditor_react_scala-build) took 8.2394ms
[debug]             Load.loadTransitive: finalizeProject(Project(id texteditor_react_scala-build, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, plugins: List(<none>))) took 15.2859ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: (texteditor_react_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2479.605501ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2805ms
[debug]         Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/project/, ...) took 2510.381ms
[debug]       Load.apply: load took 2512.391499ms
[debug]       Load.apply: resolveProjects took 0.205599ms
[debug]       Load.apply: finalTransforms took 19.9674ms
[debug]       Load.apply: config.delegates took 0.7454ms
[debug]       Load.apply: Def.make(settings)... took 146.015299ms
[debug]       Load.apply: structureIndex took 39.464901ms
[debug]       Load.apply: mkStreams took 0.005299ms
[info] loading project definition from C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4350.471699ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala
[debug]       Load.loadUnit: mkEval took 0.2279ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9445 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 58.7068ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, plugins: List(<none>))) took 63.0796ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1803.718899ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.0208ms
[debug]   Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/, ...) took 6166.834899ms
[debug] Load.apply: load took 6168.330601ms
[debug] Load.apply: resolveProjects took 0.1078ms
[debug] Load.apply: finalTransforms took 30.6916ms
[debug] Load.apply: config.delegates took 0.313999ms
[debug] Load.apply: Def.make(settings)... took 114.741ms
[debug] Load.apply: structureIndex took 22.4393ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49911 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49911, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(idea-shell, None, None)
