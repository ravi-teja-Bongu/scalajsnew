[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea10.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Dell\AppData\Local\Temp\idea10.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Azul Systems, Inc. Java 11.0.23)
[debug]       Load.loadUnit: plugins took 117.0214ms
[debug]       Load.loadUnit: defsScala took 0.3144ms
[debug] [Loading] Scanning directory C:\Users\Dell\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 9.8389ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.0142 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 42.2978ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Dell\.sbt\1.0\plugins, plugins: List(<none>))) took 83.5735ms
[debug] [Loading] Done in C:\Users\Dell\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 241.0378ms
[debug]       Load.loadUnit: cleanEvalClasses took 5.1347ms
[debug]     Load.loadUnit(file:/C:/Users/Dell/.sbt/1.0/plugins/, ...) took 373.3713ms
[debug]   Load.apply: load took 566.1135ms
[debug]   Load.apply: resolveProjects took 4.346ms
[debug]   Load.apply: finalTransforms took 48.5935ms
[debug]   Load.apply: config.delegates took 8.4867ms
[debug]   Load.apply: Def.make(settings)... took 511.2201ms
[debug]   Load.apply: structureIndex took 107.4407ms
[debug]   Load.apply: mkStreams took 2.2728ms
[info] loading global plugins from C:\Users\Dell\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2643.1225ms
[debug]           Load.loadUnit: plugins took 19.7382ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug]             Load.loadUnit: mkEval took 0.4218ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9656 ms
[info] loading settings for project texteditor_react_scala-build from plugins.sbt,idea10.sbt ...
[debug]               Load.resolveProject(texteditor_react_scala-build) took 2.686ms
[debug]             Load.loadTransitive: finalizeProject(Project(id texteditor_react_scala-build, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, plugins: List(<none>))) took 6.484ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project, returning: (texteditor_react_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 88.5642ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.8454ms
[debug]         Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/project/, ...) took 111.1532ms
[debug]       Load.apply: load took 112.6ms
[debug]       Load.apply: resolveProjects took 0.168ms
[debug]       Load.apply: finalTransforms took 14.4562ms
[debug]       Load.apply: config.delegates took 0.6166ms
[debug]       Load.apply: Def.make(settings)... took 92.8656ms
[debug]       Load.apply: structureIndex took 33.877ms
[debug]       Load.apply: mkStreams took 0.0053ms
[info] loading project definition from C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 663.3919ms
[debug]     Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala
[debug]       Load.loadUnit: mkEval took 0.3845ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2424 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 48.8062ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, plugins: List(<none>))) took 53.1779ms
[debug] [Loading] Done in C:\Users\Dell\Downloads\Texteditor_react_scala\Texteditor_react_scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 192.9012ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.1011ms
[debug]   Load.loadUnit(file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/, ...) took 861.1745ms
[debug] Load.apply: load took 863.0231ms
[debug] Load.apply: resolveProjects took 0.1645ms
[debug] Load.apply: finalTransforms took 32.1638ms
[debug] Load.apply: config.delegates took 0.3722ms
[debug] Load.apply: Def.make(settings)... took 111.337ms
[debug] Load.apply: structureIndex took 25.3152ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58004 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58004, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Texteditor_react_scala (in build file:/C:/Users/Dell/Downloads/Texteditor_react_scala/Texteditor_react_scala/)
[debug] > Exec(idea-shell, None, None)
